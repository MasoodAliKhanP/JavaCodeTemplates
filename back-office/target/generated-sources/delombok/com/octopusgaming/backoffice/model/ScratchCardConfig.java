// Generated by delombok at Tue Jan 12 12:45:24 IST 2021
package com.octopusgaming.backoffice.model;

import java.sql.Date;
import javax.validation.constraints.NotNull;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.NON_NULL)
public class ScratchCardConfig {
	private int id;
	private int promotionId;
	@NotNull
	private String prizeTypeId;
	@NotNull
	private Integer amount;
	@NotNull
	private Float chancePercentage;
	@NotNull
	private Integer validityHours;
	@NotNull
	private Integer totalPrizes;
	private Date createDate;
	private String prizeName;
	private int currentPrizeCount;

	@java.lang.SuppressWarnings("all")
	public int getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public int getPromotionId() {
		return this.promotionId;
	}

	@java.lang.SuppressWarnings("all")
	public String getPrizeTypeId() {
		return this.prizeTypeId;
	}

	@java.lang.SuppressWarnings("all")
	public Integer getAmount() {
		return this.amount;
	}

	@java.lang.SuppressWarnings("all")
	public Float getChancePercentage() {
		return this.chancePercentage;
	}

	@java.lang.SuppressWarnings("all")
	public Integer getValidityHours() {
		return this.validityHours;
	}

	@java.lang.SuppressWarnings("all")
	public Integer getTotalPrizes() {
		return this.totalPrizes;
	}

	@java.lang.SuppressWarnings("all")
	public Date getCreateDate() {
		return this.createDate;
	}

	@java.lang.SuppressWarnings("all")
	public String getPrizeName() {
		return this.prizeName;
	}

	@java.lang.SuppressWarnings("all")
	public int getCurrentPrizeCount() {
		return this.currentPrizeCount;
	}

	@java.lang.SuppressWarnings("all")
	public void setId(final int id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	public void setPromotionId(final int promotionId) {
		this.promotionId = promotionId;
	}

	@java.lang.SuppressWarnings("all")
	public void setPrizeTypeId(final String prizeTypeId) {
		this.prizeTypeId = prizeTypeId;
	}

	@java.lang.SuppressWarnings("all")
	public void setAmount(final Integer amount) {
		this.amount = amount;
	}

	@java.lang.SuppressWarnings("all")
	public void setChancePercentage(final Float chancePercentage) {
		this.chancePercentage = chancePercentage;
	}

	@java.lang.SuppressWarnings("all")
	public void setValidityHours(final Integer validityHours) {
		this.validityHours = validityHours;
	}

	@java.lang.SuppressWarnings("all")
	public void setTotalPrizes(final Integer totalPrizes) {
		this.totalPrizes = totalPrizes;
	}

	@java.lang.SuppressWarnings("all")
	public void setCreateDate(final Date createDate) {
		this.createDate = createDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setPrizeName(final String prizeName) {
		this.prizeName = prizeName;
	}

	@java.lang.SuppressWarnings("all")
	public void setCurrentPrizeCount(final int currentPrizeCount) {
		this.currentPrizeCount = currentPrizeCount;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ScratchCardConfig)) return false;
		final ScratchCardConfig other = (ScratchCardConfig) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (this.getId() != other.getId()) return false;
		if (this.getPromotionId() != other.getPromotionId()) return false;
		final java.lang.Object this$prizeTypeId = this.getPrizeTypeId();
		final java.lang.Object other$prizeTypeId = other.getPrizeTypeId();
		if (this$prizeTypeId == null ? other$prizeTypeId != null : !this$prizeTypeId.equals(other$prizeTypeId)) return false;
		final java.lang.Object this$amount = this.getAmount();
		final java.lang.Object other$amount = other.getAmount();
		if (this$amount == null ? other$amount != null : !this$amount.equals(other$amount)) return false;
		final java.lang.Object this$chancePercentage = this.getChancePercentage();
		final java.lang.Object other$chancePercentage = other.getChancePercentage();
		if (this$chancePercentage == null ? other$chancePercentage != null : !this$chancePercentage.equals(other$chancePercentage)) return false;
		final java.lang.Object this$validityHours = this.getValidityHours();
		final java.lang.Object other$validityHours = other.getValidityHours();
		if (this$validityHours == null ? other$validityHours != null : !this$validityHours.equals(other$validityHours)) return false;
		final java.lang.Object this$totalPrizes = this.getTotalPrizes();
		final java.lang.Object other$totalPrizes = other.getTotalPrizes();
		if (this$totalPrizes == null ? other$totalPrizes != null : !this$totalPrizes.equals(other$totalPrizes)) return false;
		final java.lang.Object this$createDate = this.getCreateDate();
		final java.lang.Object other$createDate = other.getCreateDate();
		if (this$createDate == null ? other$createDate != null : !this$createDate.equals(other$createDate)) return false;
		final java.lang.Object this$prizeName = this.getPrizeName();
		final java.lang.Object other$prizeName = other.getPrizeName();
		if (this$prizeName == null ? other$prizeName != null : !this$prizeName.equals(other$prizeName)) return false;
		if (this.getCurrentPrizeCount() != other.getCurrentPrizeCount()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ScratchCardConfig;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getId();
		result = result * PRIME + this.getPromotionId();
		final java.lang.Object $prizeTypeId = this.getPrizeTypeId();
		result = result * PRIME + ($prizeTypeId == null ? 43 : $prizeTypeId.hashCode());
		final java.lang.Object $amount = this.getAmount();
		result = result * PRIME + ($amount == null ? 43 : $amount.hashCode());
		final java.lang.Object $chancePercentage = this.getChancePercentage();
		result = result * PRIME + ($chancePercentage == null ? 43 : $chancePercentage.hashCode());
		final java.lang.Object $validityHours = this.getValidityHours();
		result = result * PRIME + ($validityHours == null ? 43 : $validityHours.hashCode());
		final java.lang.Object $totalPrizes = this.getTotalPrizes();
		result = result * PRIME + ($totalPrizes == null ? 43 : $totalPrizes.hashCode());
		final java.lang.Object $createDate = this.getCreateDate();
		result = result * PRIME + ($createDate == null ? 43 : $createDate.hashCode());
		final java.lang.Object $prizeName = this.getPrizeName();
		result = result * PRIME + ($prizeName == null ? 43 : $prizeName.hashCode());
		result = result * PRIME + this.getCurrentPrizeCount();
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "ScratchCardConfig(id=" + this.getId() + ", promotionId=" + this.getPromotionId() + ", prizeTypeId=" + this.getPrizeTypeId() + ", amount=" + this.getAmount() + ", chancePercentage=" + this.getChancePercentage() + ", validityHours=" + this.getValidityHours() + ", totalPrizes=" + this.getTotalPrizes() + ", createDate=" + this.getCreateDate() + ", prizeName=" + this.getPrizeName() + ", currentPrizeCount=" + this.getCurrentPrizeCount() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public ScratchCardConfig() {
	}
}

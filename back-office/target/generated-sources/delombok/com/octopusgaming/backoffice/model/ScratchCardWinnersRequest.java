// Generated by delombok at Tue Jan 12 12:45:24 IST 2021
package com.octopusgaming.backoffice.model;

import java.sql.Date;
import javax.validation.constraints.NotNull;

public class ScratchCardWinnersRequest {
	@NotNull(message = "StartDate is mandatory")
	private Date startDate;
	@NotNull(message = "EndDate is mandatory")
	private Date endDate;
	private Boolean onlyLegAndJackpot;

	@java.lang.SuppressWarnings("all")
	public ScratchCardWinnersRequest() {
	}

	@java.lang.SuppressWarnings("all")
	public Date getStartDate() {
		return this.startDate;
	}

	@java.lang.SuppressWarnings("all")
	public Date getEndDate() {
		return this.endDate;
	}

	@java.lang.SuppressWarnings("all")
	public Boolean getOnlyLegAndJackpot() {
		return this.onlyLegAndJackpot;
	}

	@java.lang.SuppressWarnings("all")
	public void setStartDate(final Date startDate) {
		this.startDate = startDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setEndDate(final Date endDate) {
		this.endDate = endDate;
	}

	@java.lang.SuppressWarnings("all")
	public void setOnlyLegAndJackpot(final Boolean onlyLegAndJackpot) {
		this.onlyLegAndJackpot = onlyLegAndJackpot;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ScratchCardWinnersRequest)) return false;
		final ScratchCardWinnersRequest other = (ScratchCardWinnersRequest) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$startDate = this.getStartDate();
		final java.lang.Object other$startDate = other.getStartDate();
		if (this$startDate == null ? other$startDate != null : !this$startDate.equals(other$startDate)) return false;
		final java.lang.Object this$endDate = this.getEndDate();
		final java.lang.Object other$endDate = other.getEndDate();
		if (this$endDate == null ? other$endDate != null : !this$endDate.equals(other$endDate)) return false;
		final java.lang.Object this$onlyLegAndJackpot = this.getOnlyLegAndJackpot();
		final java.lang.Object other$onlyLegAndJackpot = other.getOnlyLegAndJackpot();
		if (this$onlyLegAndJackpot == null ? other$onlyLegAndJackpot != null : !this$onlyLegAndJackpot.equals(other$onlyLegAndJackpot)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ScratchCardWinnersRequest;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $startDate = this.getStartDate();
		result = result * PRIME + ($startDate == null ? 43 : $startDate.hashCode());
		final java.lang.Object $endDate = this.getEndDate();
		result = result * PRIME + ($endDate == null ? 43 : $endDate.hashCode());
		final java.lang.Object $onlyLegAndJackpot = this.getOnlyLegAndJackpot();
		result = result * PRIME + ($onlyLegAndJackpot == null ? 43 : $onlyLegAndJackpot.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "ScratchCardWinnersRequest(startDate=" + this.getStartDate() + ", endDate=" + this.getEndDate() + ", onlyLegAndJackpot=" + this.getOnlyLegAndJackpot() + ")";
	}
}
